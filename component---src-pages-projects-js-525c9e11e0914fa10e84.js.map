{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./node_modules/@material-ui/core/esm/Container/Container.js","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["useStyles","makeStyles","theme","paper","padding","margin","image","width","height","data","classes","title","maxWidth","py","li","className","key","id","container","spacing","item","xs","sm","md","onClick","navigate","withPrefix","fluid","alt","direction","variant","gutterBottom","style","color","to","slug","query","Container","props","ref","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","root","concat","String","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","maxWidthSm","maxWidthMd","maxWidthLg","lg","maxWidthXl","xl","name","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","replace","Grid","_props$alignContent","alignContent","_props$alignItems","alignItems","classNameProp","_props$container","_props$direction","_props$item","_props$justify","justify","_props$lg","_props$md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","StyledGrid","flexWrap","minWidth","flexDirection","justifyContent","styles","forEach","themeSpacing","generateGutter","accumulator","globalStyles","size","round","flexBasis","flexGrow","generateGrid"],"mappings":"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","file":"component---src-pages-projects-js-525c9e11e0914fa10e84.js","sourcesContent":["import React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { graphql, Link, withPrefix } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { navigate } from \"@reach/router\"\nimport Paper from \"@material-ui/core/Paper\"\nimport ButtonBase from \"@material-ui/core/ButtonBase\"\nimport Box from \"@material-ui/core/Box\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"1rem 0\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}))\n\nconst ProjectsPage = ({ data }) => {\n  const classes = useStyles()\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <Container maxWidth=\"lg\">\n        <Box py={2}>\n          {data.allProjectsJson.edges.map(({ node: li }) => (\n            <Paper className={classes.paper} key={li.id}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={4} md={4}>\n                  <ButtonBase\n                    className={classes.image}\n                    onClick={() =>\n                      navigate(withPrefix(`/projects/${li.fields.slug}`))\n                    }\n                  >\n                    <Img\n                      fluid={li.coverImage.childImageSharp.fluid}\n                      alt=\"Wei Li\"\n                      className={classes.image}\n                    />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm={8} md={8} container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography variant=\"h5\" gutterBottom>\n                        {li.title}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {li.description}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Link\n                        style={{ color: `black` }}\n                        to={`/projects/${li.fields.slug}`}\n                      >\n                        Show More\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          ))}\n        </Box>\n      </Container>\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n\nexport const query = graphql`\n  query {\n    allProjectsJson {\n      edges {\n        node {\n          id\n          skills\n          title\n          url\n          details\n          fields {\n            slug\n          }\n          description\n          coverImage {\n            childImageSharp {\n              fluid(maxWidth: 360, maxHeight: 320) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), {}, theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}