{"version":3,"sources":["webpack:///./src/pages/projects/index.js","webpack:///./node_modules/@material-ui/core/esm/Container/Container.js"],"names":["useStyles","makeStyles","theme","paper","padding","margin","image","width","height","data","classes","title","maxWidth","py","li","className","key","id","container","spacing","item","xs","sm","md","onClick","navigate","withPrefix","fluid","alt","direction","variant","gutterBottom","style","color","to","slug","query","Container","props","ref","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","root","concat","String","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","maxWidthSm","maxWidthMd","maxWidthLg","lg","maxWidthXl","xl","name"],"mappings":"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","file":"component---src-pages-projects-index-js-f458b0fecea2b5529195.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { graphql, Link, withPrefix } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport { navigate } from \"@reach/router\";\nimport { Box, ButtonBase, Paper, Typography, Grid, Container } from \"@material-ui/core\";\nimport { Layout, SEO } from \"components\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"1rem 0\",\n  },\n  image: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n}));\n\nconst ProjectsPage = ({ data }) => {\n  const classes = useStyles();\n\n  return (\n    <Layout>\n      <SEO title=\"Projects\" />\n      <Container maxWidth=\"lg\">\n        <Box py={2}>\n          {data.allProjectsJson.edges.map(({ node: li }) => (\n            <Paper className={classes.paper} key={li.id}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={4} md={4}>\n                  <ButtonBase\n                    className={classes.image}\n                    onClick={() =>\n                      navigate(withPrefix(`/projects/${li.fields.slug}`))\n                    }\n                  >\n                    <Img\n                      fluid={li.coverImage.childImageSharp.fluid}\n                      alt=\"Wei Li\"\n                      className={classes.image}\n                    />\n                  </ButtonBase>\n                </Grid>\n                <Grid item xs={12} sm={8} md={8} container>\n                  <Grid item xs container direction=\"column\" spacing={2}>\n                    <Grid item xs>\n                      <Typography variant=\"h5\" gutterBottom>\n                        {li.title}\n                      </Typography>\n                      <Typography variant=\"subtitle1\" gutterBottom>\n                        {li.description}\n                      </Typography>\n                    </Grid>\n                    <Grid item>\n                      <Link\n                        style={{ color: \"black\" }}\n                        to={`/projects/${li.fields.slug}`}\n                      >\n                        Show More\n                      </Link>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Paper>\n          ))}\n        </Box>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n\nexport const query = graphql`\n  query {\n    allProjectsJson {\n      edges {\n        node {\n          id\n          skills\n          title\n          url\n          details\n          fields {\n            slug\n          }\n          description\n          coverImage {\n            childImageSharp {\n              fluid(maxWidth: 360, maxHeight: 320) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}