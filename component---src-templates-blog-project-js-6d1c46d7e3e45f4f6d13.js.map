{"version":3,"sources":["webpack:///./src/templates/blog-project.js","webpack:///./node_modules/@material-ui/core/esm/Container/Container.js"],"names":["useStyles","makeStyles","theme","caption","fontWeight","tagSkill","backgroundColor","borderRadius","color","fontSize","display","cursor","padding","lineHeight","detailList","paddingLeft","image","marginTop","marginBottom","link","primary","ProjectModal","props","classes","project","site","title","description","publicURL","maxWidth","py","style","alignItems","arial-label","onClick","navigate","variant","key","fluid","alt","className","my","component","container","spacing","item","gutterBottom","index","href","target","rel","query","Container","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","root","concat","String","width","marginLeft","boxSizing","marginRight","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name"],"mappings":"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","file":"component---src-templates-blog-project-js-6d1c46d7e3e45f4f6d13.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Img from \"gatsby-image\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { graphql, navigate } from \"gatsby\";\n\nimport { IconButton, Container, Box, Paper, Grid, Typography } from '@material-ui/core';\nimport { Layout, SEO } from \"components\";\n\nconst useStyles = makeStyles(theme => ({\n  caption: {\n    fontWeight: 700,\n  },\n  tagSkill: {\n    backgroundColor: \"#E0E0E0\",\n    borderRadius: 4,\n    color: \"#222\",\n    fontSize: 12,\n    display: \"inline-block\",\n    cursor: \"default\",\n    padding: \"5px 5px\",\n    lineHeight: 1,\n  },\n  detailList: {\n    paddingLeft: 16,\n  },\n  image: {\n    marginTop: 12,\n    marginBottom: 12,\n  },\n  link: {\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport default function ProjectModal(props) {\n  const classes = useStyles();\n  const project = props.data.projectsJson;\n  const site = props.data.site;\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.description}\n        image={`${site.siteMetadata.baseUrl}${project.coverImage.publicURL}`}\n      />\n      <Container maxWidth=\"lg\">\n        <Box py={2}>\n          <Box style={{ display: \"flex\", alignItems: \"center\" }}>\n            <IconButton\n              arial-label=\"back\"\n              onClick={() => navigate(\"/projects\")}\n            >\n              <ArrowBackIcon />\n            </IconButton>\n            <Typography variant=\"h6\">{project.title}</Typography>\n          </Box>\n          <Box>\n            {project.images.map((image, index) => (\n              <Img\n                key={index}\n                fluid={image.childImageSharp.fluid}\n                alt=\"\"\n                className={classes.image}\n              />\n            ))}\n\n            <Box my={2}>\n              <Typography\n                className={classes.caption}\n                variant=\"caption\"\n                component=\"strong\"\n                display=\"block\"\n              >\n                Skills\n              </Typography>\n              <Grid container spacing={2}>\n                {project.skills.map((skill, index) => (\n                  <Grid key={index} item>\n                    <Paper className={classes.tagSkill}>{skill}</Paper>\n                  </Grid>\n                ))}\n              </Grid>\n            </Box>\n\n            <Box my={2}>\n              <Typography\n                className={classes.caption}\n                variant=\"caption\"\n                component=\"strong\"\n                display=\"block\"\n              >\n                Project description\n              </Typography>\n              <Typography variant=\"body2\" gutterBottom>\n                {project.description}\n              </Typography>\n            </Box>\n\n            <Box my={2}>\n              <Typography\n                className={classes.caption}\n                variant=\"caption\"\n                component=\"strong\"\n                display=\"block\"\n              >\n                Details\n              </Typography>\n              <ul className={classes.detailList}>\n                {project.details.map((detail, index) => (\n                  <li key={index}>\n                    <Typography variant=\"body2\" gutterBottom>\n                      {detail}\n                    </Typography>\n                  </li>\n                ))}\n              </ul>\n            </Box>\n\n            {project.url && (\n              <Box my={2}>\n                <Typography\n                  className={classes.caption}\n                  variant=\"caption\"\n                  component=\"strong\"\n                  display=\"block\"\n                >\n                  URL\n                </Typography>\n                <a\n                  href={project.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  className={classes.link}\n                >\n                  {project.url}\n                </a>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Container>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        baseUrl\n      }\n    }\n    projectsJson(fields: { slug: { eq: $slug } }) {\n      id\n      skills\n      title\n      url\n      description\n      details\n      fields {\n        slug\n      }\n      coverImage {\n        publicURL\n      }\n      images {\n        childImageSharp {\n          fluid(maxWidth: 1280) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`;\n","import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}