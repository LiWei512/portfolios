{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/Container/Container.js","webpack:///./src/templates/RulerApp.js"],"names":["Container","props","ref","classes","className","_props$component","component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","other","root","concat","String","theme","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","display","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","value","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","name","useStyles","makeStyles","container","paddingTop","paddingBottom","detailList","margin","link","color","primary","imageGrid","gridTemplateColumns","gridGap","RulerApp","project","site","title","description","image","publicURL","style","alignItems","arial-label","onClick","navigate","variant","my","key","fluid","alt","item","skill","gutterBottom","index","query"],"mappings":"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","file":"component---src-templates-ruler-app-js-072ef657c692cb2b2a3b.js","sourcesContent":["import \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.reduce\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import React from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Img from \"gatsby-image\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { graphql, navigate } from \"gatsby\";\n\nimport { IconButton, Container, Box, Grid, Typography } from \"@material-ui/core\";\nimport { Layout, SEO, SkillTag } from \"components\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    paddingTop: \"1rem\",\n    paddingBottom: \"1rem\",\n  },\n  detailList: {\n    paddingLeft: 16,\n    margin: 0,\n  },\n  link: {\n    color: theme.palette.text.primary,\n  },\n  imageGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(160px, auto))\",\n    gridGap: \"1rem\",\n  },\n}));\n\nexport default function RulerApp(props) {\n  const classes = useStyles();\n  const project = props.data.projectsJson;\n  const site = props.data.site;\n\n  return (\n    <Layout>\n      <SEO\n        title={project.title}\n        description={project.description}\n        image={`${site.siteMetadata.baseUrl}${project.coverImage.publicURL}`}\n      />\n      <Container maxWidth=\"lg\" className={classes.container}>\n        <Box style={{ display: \"flex\", alignItems: \"center\" }}>\n          <IconButton\n            arial-label=\"back\"\n            onClick={() => navigate(\"/projects\")}\n          >\n            <ArrowBackIcon />\n          </IconButton>\n          <Typography variant=\"h6\">{project.title}</Typography>\n        </Box>\n\n        <Box my={2} component=\"section\" className={classes.imageGrid}>\n          {project.images.map((image, index) => (\n            <Img\n              key={index}\n              fluid={image.childImageSharp.fluid}\n              alt={project.title}\n            />\n          ))}\n        </Box>\n\n        <Box my={2} component=\"section\">\n          <Typography\n            variant=\"subtitle2\"\n            component=\"strong\"\n            display=\"block\"\n          >\n            Skills\n          </Typography>\n          <Grid container spacing={1}>\n            {project.skills.map((skill, index) => (\n              <Grid key={index} item>\n                <SkillTag skill={skill} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n\n        <Box my={2} component=\"section\">\n          <Typography\n            variant=\"subtitle2\"\n            component=\"strong\"\n            display=\"block\"\n          >\n            Project description\n          </Typography>\n          <Typography variant=\"body2\" gutterBottom>\n            {project.description}\n          </Typography>\n        </Box>\n\n        <Box my={2} component=\"section\">\n          <Typography\n            variant=\"subtitle2\"\n            component=\"strong\"\n            display=\"block\"\n          >\n            Details\n          </Typography>\n          <ul className={classes.detailList}>\n            {project.details.map((detail, index) => (\n              <li key={index}>\n                <Typography variant=\"body2\" gutterBottom>\n                  {detail}\n                </Typography>\n              </li>\n            ))}\n          </ul>\n        </Box>\n\n        {project.url && (\n          <Box my={2} component=\"section\">\n            <Typography\n              variant=\"subtitle2\"\n              component=\"strong\"\n              display=\"block\"\n            >\n              URL\n            </Typography>\n            <Typography className={classes.link}>\n              {project.url}\n            </Typography>\n          </Box>\n        )}\n      </Container>\n    </Layout >\n  );\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        baseUrl\n      }\n    }\n    projectsJson(fields: { slug: { eq: $slug } }) {\n      id\n      skills\n      title\n      url\n      description\n      details\n      fields {\n        slug\n      }\n      coverImage {\n        publicURL\n      }\n      images {\n        childImageSharp {\n          fluid(maxWidth: 375) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}